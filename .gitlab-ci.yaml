stages:
  - sonarqube
  - quality_gate
  - trivy_fsscan
  - userdata
  - terraform_init
  - terraform_plan
  - terraform_apply  


sonarqube-check:
  stage: sonarqube
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main


trivy_fs_scan:
    stage: trivy_fsscan
    script:
    - trivy fs . > trivyfs.txt

executable_permission:
  stage: userdata
  script:
  - chmod +x user-data.sh

terraform_init:
  stage: terraform
  script:
  - terraform init

terraform_plan:
  stage: terraform
  script:
  - terraform plan


terraform_apply:
  stage: terraform
  script:
  - terraform apply --auto-approve
  when: manual










